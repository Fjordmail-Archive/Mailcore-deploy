#!/bin/bash
set -e

#######################################
#	Backup current folder
#	Get latest from the GitHub
#	Fetch plugins
#
#	Arguments:
#		repo (string): repo name
#	Returns:
#		1 upon error
#		0 upon success
#######################################

function main() {
	local readonly USAGE="Usage: ./deploy repo"
	declare -a repos=("Sol.dk-RC" "Wemail-RC")
	local readonly now=$(date +'%Y-%m-%d--%H-%M')

	if [ "${#}" -lt 1 ]; then
		err "Error: no argument provided"
		err "${USAGE}"
		err "Available repo:"
		printf '\t%s\n' "${repos[@]}"
		return 1
	fi

	# In Bash, it's easy to check if an array contains an element
	if [[ ! ${repos[*]} =~ (^|[[:space:]])"${1}"($|[[:space:]]) ]]; then
		err "Error: invalid argument provided. Available repo:"
		printf '\t%s\n' "${repos[@]}"
		return 1
	fi

	# Set correct destination folder, depending on $1
	if [ "${1}" == "Sol.dk-RC" ]; then
		dest="app.sol.dk"
		service="soldk"
	elif [ "${1}" == "Wemail-RC" ]; then
		dest="app.wemail.no"
		service="wemail"
	else
		err "Error: invalid argument provided"
		err "This should not appear"
		return 1
	fi

	# If current webmail does not exist or is outdated
	if [[ ! -d "${dest}" ]] || [[ "$(git --git-dir=${dest}/.git/ status -uno | grep -c 'Your branch is up to date with ')" -ne 1 ]]; then
		# Backup old folder
		[[ -d "${dest}" ]] && mv "${dest}" "${dest}.bak-${now}"

		# Fetch new webmail from GitHub
		GIT_SSH_COMMAND="ssh -i ~/.ssh/mailcore_deploy_${service}rc -o IdentitiesOnly=yes" git clone "git@github.com:Fjordmail/${1}.git" "${dest}"

		# Remove potential included plugins
		rm -rf "${dest}/plugins/wblist"
		rm -rf "${dest}/plugins/recurrent"
		rm -rf "${dest}/raim"
		rm -rf "${dest}/instance/password-reset"
		rm -rf "${dest}/instance/registration"
	fi

	# Fetch/Update plugins
	mkdir -p plugins
	get_config "${dest}"
	get_wblist "${dest}"
	get_raim "${dest}"
	get_recurrent "${dest}"

	# Fix permissions
	sudo chown -R www-data:www-data "${dest}" config/ plugins/
	sudo chmod -R ug+rwx "${dest}" config/ plugins/
}

function get_config() {
	if [ "${#}" -lt 1 ]; then
		err "Error: no argument provided"
		err "Usage: get_config dest"
		return 1
	fi

	# Check if passed dest exists
	dest="${1}"
	if [[ ! -d "${dest}" ]]; then
		err "Error: destination folder does not exist"
		return 1
	fi

	# Check if config/dest exists
	if [[ ! -d "config/${dest}/" ]]; then
		err "Error: config at config/"${dest}"/ does not exist"
		return 1
	fi

	# Remove old rc_root/config
	[[ -d "${dest}/config" ]] && rm -rf "${dest}/config"

	ln -s "../config/${dest}/" "${dest}/config"

	return 0
}

function get_wblist() {
	if [ "${#}" -lt 1 ]; then
		err "Error: no argument provided"
		err "Usage: get_wblist dest"
		return 1
	fi

	# Check if passed dest exists
	dest="${1}"
	if [[ ! -d "${dest}" ]]; then
		err "Error: destination folder does not exist"
		return 1
	fi

	# Check if shared plugin is out of date
	if [ ! -d plugins/RC-Plugin-wblist/ ] || [[ "$(git --git-dir=plugins/RC-Plugin-wblist/.git/ status -uno | grep -c 'Your branch is up to date with ')" -ne 1 ]]; then
		# wblist: remove existing
		rm -rf "${dest}/plugins/wblist/"
		rm -rf plugins/RC-Plugin-wblist/

		# Fetch latest
		GIT_SSH_COMMAND='ssh -i ~/.ssh/mailcore_deploy_wblist -o IdentitiesOnly=yes' git clone git@github.com:Fjordmail/RC-Plugin-wblist.git plugins/RC-Plugin-wblist

		# Link new to rc_root/plugins
		ln -s "../../plugins/RC-Plugin-wblist" "${dest}/plugins/wblist"
	fi

	return 0
}

function get_raim() {
	if [ "${#}" -lt 1 ]; then
		err "Error: no argument provided"
		err "Usage: get_raim dest"
		return 1
	fi

	# Check if passed dest exists
	dest="${1}"
	if [[ ! -d "${dest}" ]]; then
		err "Error: destination folder does not exist"
		return 1
	fi

	# Check if raim is out of date or not existant
	if [ ! -d "plugins/raim-${dest}" ] || [[ "$(git --git-dir=plugins/raim-${dest}/.git/ status -uno | grep -c 'Your branch is up to date with ')" -ne 1 ]]; then
		# Delete existing
		rm -rf "plugins/raim-${dest}"
		rm -rf "${dest}/instance/password-reset"
		rm -rf "${dest}/instance/registration"
		
		# Fetch latest
		GIT_SSH_COMMAND='ssh -i ~/.ssh/mailcore_deploy_raim -o IdentitiesOnly=yes' git clone git@github.com:Fjordmail/RAIM.git "plugins/raim-${dest}"

		# Build
		cd "plugins/raim-${dest}"
		yarn install
		ln -s "../config/${dest}/raim_shared_config.js" packages/shared/src/config.js
		ln -s "../config/${dest}/raim_registration.env" packages/registration/.env
		ln -s "../config/${dest}/raim_password-reset.env" packages/password-reset/.env
		yarn build

		ln -s packages/password-reset/build "../../${dest}/instance/password-reset"
		ln -s packages/registration/build "../../${dest}/instance/registration"

		cd ../../
	fi

	return 0
}

function get_recurrent() {
	if [ "${#}" -lt 1 ]; then
		err "Error: no argument provided"
		err "Usage: get_recurrent dest"
		return 1
	fi

	# Check if passed dest exists
	dest="${1}"
	if [[ ! -d "${dest}" ]]; then
		err "Error: destination folder does not exist"
		return 1
	fi

	# Check if recurrent plugin is out of date
	if [ ! -d "plugins/RC-Plugin-Recurrent-${dest}" ] || [[ "$(git --git-dir=plugins/RC-Plugin-Recurrent-${dest}/.git/ status -uno | grep -c 'Your branch is up to date with ')" -ne 1 ]]; then
		# Recurrent: remove existing
		rm -rf "${dest}/plugins/recurrent/"
		rm -rf "plugins/RC-Plugin-Recurrent-${dest}/"

		# Fetch latest
		GIT_SSH_COMMAND='ssh -i ~/.ssh/mailcore_deploy_recurrent -o IdentitiesOnly=yes' git clone git@github.com:Fjordmail/RC-Plugin-Recurrent.git "plugins/RC-Plugin-Recurrent-${dest}"

		# Link plugins
		ln -s "plugins/RC-Plugin-Recurrent-${dest}" "${dest}/plugins/recurrent"

		ln -s "../config/${dest}/recurrent-Config.php" "plugins/RC-Plugin-Recurrent-${dest}/vendor/Config.php"
		ln -s "plugins/raim-${dest}/packages/account/build" "${dest}/plugins/recurrent/vendor/spa"
	fi

	return 0
}

function err() {
	echo "${*}" >&2
}

main "${@}"; exit
